---
type Section = {
	title?: string;
	achievements: string[];
};

interface Props {
	title: string;
	company: string;
	from: string;
	to: string;
	sections: Section[];
}

const { title, company, from, to, sections } = Astro.props;
---

<div class="flex flex-col">
    <span class="font-semibold text-stone-800">{title} @ {company}</span>
    <div class="flex items-center space-x-4">
        <span class="text-xs text-stone-500">{from} - {to}</span>
        <div class="flex items-center space-x-2">
            <svg  xmlns="http://www.w3.org/2000/svg"  class="h-4 w-4 text-stone-500"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-map-pin"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 11a3 3 0 1 0 6 0a3 3 0 0 0 -6 0" /><path d="M17.657 16.657l-4.243 4.243a2 2 0 0 1 -2.827 0l-4.244 -4.243a8 8 0 1 1 11.314 0z" /></svg>
            <span class="text-stone-500 text-xs">Paris, France</span>
        </div>
    </div>
    {sections.map((section) => (
        
    <div>
        {section.title && <span class="text-sm font-semibold">{section.title}</span>}
        <ul class="list-disc p-4">
        {section.achievements.map((achievement) => (<li class="text-sm">{achievement}</li>))}
    </ul>
    </div>))}
</div>